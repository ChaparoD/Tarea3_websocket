{"version":3,"sources":["components/client.js","assets/planeicon.jpeg","App.js","reportWebVitals.js","index.js"],"names":["client","io","path","ClientComponent","useState","flights","setFlights","flightsPos","setFlightsPos","mensajes","setMensajes","IconLocation","L","icon","iconUrl","icono","iconSize","Markers","Object","values","map","vuelo","i","Marker","position","Chat","className","msn","name","message","Date","date","slice","useEffect","emit","off","on","data","intermediate","code","console","log","adding","push","style","float","paddingRight","origin","destination","airline","plane","seats","MapContainer","center","lat","lng","zoom","TileLayer","url","attribution","Polyline","color","positions","type","placeholder","text","onSubmit","event","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71fcc832.chunk.js","sourcesContent":["import io from \"socket.io-client\";\n\n\nconst client = io('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n  path : '/flights'\n});\n\nexport default client;","export default __webpack_public_path__ + \"static/media/planeicon.2dc0d9df.jpeg\";","import React, { useEffect, useState } from \"react\";\nimport './App.css'\nimport {MapContainer, TileLayer, Polyline} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n//import ReactDOM from 'react-dom';\nimport client from \"./components/client.js\";\nimport {Marker} from 'react-leaflet';\nimport L from 'leaflet';\n//import icono from \"leaflet/dist/images/marker-icon-2x.png\";\nimport icono from \"./assets/planeicon.jpeg\";\n\n\n\n\n\n\nexport default function ClientComponent() {\n  \n  \n  const [flights, setFlights] = useState({});\n  //{'starting': {'code': 'starting' ,\n   //'position':['20.00000', '20.00000']}}\n  //const [markersPos, setMarkersPos] = useState([]);\n  const [flightsPos, setFlightsPos] = useState({});\n  const [ mensajes, setMensajes] = useState([])\n\n\n  const IconLocation = L.icon({\n      iconUrl: icono,\n      iconSize: [30,30],\n      \n  });\n  \n\n \n  \n  const Markers = () => {\n    \n     \n      return (\n          <div>\n          {Object.values(flightsPos).map((vuelo, i) => (\n          \n            <Marker key = {i} position = {[vuelo[0], vuelo[1]]} icon = {IconLocation} \n              />\n          \n      ))}\n          </div>\n\n      );\n    }\n  \n  const handleSubmit = (event) => {\n    client.emit('CHAT', {\"name\":\"me\", \"message\": \"Nuevo mensaje\"});\n  }\n  \n  const Chat = () => {\n    return (\n    <div className = 'column-chat'>\n    {Object.values(mensajes).map((msn, i) => (\n      <li > \"De: \" { mensajes[i].name}  \"|| => \"  {mensajes[i].message} <br/> (         \n      {Date(mensajes[i].date).slice(16,25)}) </li>\n  ))}\n      \n    </div>\n\n    )}\n\n\n  useEffect(() => {\n    client.emit('FLIGHTS', {});\n    return () => {client.off()};\n  }, [flights]);\n  \n\n  useEffect(() => {\n    client.on('FLIGHTS', data => {\n      //console.log(\"recibo vuelos\")\n      //console.log(data);\n\n      \n      setFlights(data);\n      /*\n      Object.values(flights).map((vuelo, i) => (\n        console.log(flights[i].code)\n     ))*/\n\n     // const largo = flights.length\n      //for (let i = 0 ; i< largo ; i++){\n       // console.log(flights[i].code)\n\n      //}\n    });\n\n\n    client.on('POSITION', data => {\n      \n      const intermediate = flightsPos;\n      intermediate[data.code] = [data.position[0], data.position[1]]\n      setFlightsPos(intermediate);\n     // console.log(\"NUEVAS POSICIONES =======\");\n      //console.log(flightsPos);\n      //setMarkersPos(position)\n\n    },);\n\n    client.on('CHAT', data => {\n      console.log(data);\n      const adding = mensajes;\n      adding.push(data);\n      setMensajes(adding)\n\n\n    },);\n\n    // CLEAN UP THE EFFECT\n    return () => {client.off()};\n    //\n\n  },);\n\n  return(\n    <div className = \"column\"> \n    <h3> Vuelos :</h3>\n    <ul className = \"companylist\">\n      \n    {Object.values(flights).map((vuelo, i) => (\n        <li style={{float : 'left', paddingRight : '5px'}} key = {i} >\"Codigo: \" {flights[i].code} \"| Origen: \" {flights[i].origin}  \"| Destino : \"{flights[i].destination}\n         \"| Aerolinea: \"{flights[i].airline}  \"| Avi√≥n: \"{flights[i].plane}  \"| Asientos: \"{flights[i].seats}\n        \n        </li>\n     ))}\n     </ul>\n\n    <MapContainer  center ={{lat: '-35.55555' , lng: '-70.66666'}} zoom = {3}>\n        <TileLayer  url = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png' \n        attribution = '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n      <Markers />\n      {Object.values(flights).map((vuelo, i) => (\n        <Polyline color = 'black' positions={[flights[i].origin, flights[i].destination]}/>\n      ))} \n    </MapContainer>\n    <h2> Chat Box</h2>\n    <Chat/>\n    <input\n      type=\"text\" placeholder=\"Inserte Mensaje\" \n      />\n      <button text = \"Enviar\" onSubmit = {handleSubmit}/>\n    </div>\n  )\n  //<Markers vuelos = {{flightsPos}}/>\n//return (\n  //<mapa/>\n//);\n//\n//let select = document.querySelectorAll(\".form-control\")[0];\n//flights.forEach(e => {\n  //select.innerHTML +=  `<option key = \"${e.code}\" value = \"${e.airline}\">${e.airline} <option/> `;\n  \n//});\n//return (\n  //<select class = 'form-control'>\n\n    //</select>\n//)\n\n//const flightList = (\n //<ul> {flights.map((item, i) => <li key = {item+i}> {item['code']}</li>)} </ul>\n//)\n\n//ReactDOM.render(flightList, document.getElementById('app'));\n\n\n\n//return (\n  //<div>\n    //<ul>\n   // <li> Vuelos : { flights[0].code}</li>\n    //<li>Vuelos : { flights[1].code}</li>\n    \n    //</ul>\n    //<p>\n      //Position: {position.code}\n    //</p>\n\n    //</div>\n    //)\n\n  \n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}